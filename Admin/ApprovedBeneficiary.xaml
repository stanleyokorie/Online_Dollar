<Activity mc:Ignorable="sap sap2010 sads" x:Class="Sequence" this:Sequence.BeneficiaryID="2"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:snm="clr-namespace:System.Net.Mail;assembly=System"
 xmlns:this="clr-namespace:"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="objMail" Type="InArgument(snm:MailMessage)" />
    <x:Property Name="Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="BeneficiaryID" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Sequence_6</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Varify Beneficiary Account" sap2010:WorkflowViewState.IdRef="Sequence_5">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataRow" Name="dtRow" />
      <Variable x:TypeArguments="x:Int32" Name="StatusCount" />
      <Variable x:TypeArguments="x:String" Name="Status" />
      <Variable x:TypeArguments="x:String" Name="Selector" />
      <Variable x:TypeArguments="sd:DataTable" Default="[New System.Data.DataTable]" Name="dtBeneficiary" />
      <Variable x:TypeArguments="x:Int32" Name="idx" />
    </Sequence.Variables>
    <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[&quot;Beneficiaries key = &quot; + BeneficiaryID]" />
    <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="IE" DisplayName="Attach Browser 'PotofGold Page'" sap2010:WorkflowViewState.IdRef="BrowserScope_2" InformativeScreenshot="33089be225aa35f64dc0916b01da0e49" Selector="&lt;html title='Pot of Gold Admin' /&gt;">
      <ui:BrowserScope.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="FirstName" />
              <Variable x:TypeArguments="x:String" Name="LastName" />
              <Variable x:TypeArguments="x:String" Name="BankName" />
              <Variable x:TypeArguments="x:String" Name="AdminEmailID" />
              <Variable x:TypeArguments="x:String" Name="Email" />
            </Sequence.Variables>
            <ui:Click DelayBefore="{x:Null}" ClickType="CLICK_SINGLE" DelayMS="3000" DisplayName="Click 'A  Beneficiarieslist.asp'" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
              <ui:Click.CursorPosition>
                <ui:CursorPosition OffsetX="144" OffsetY="10" Position="TopLeft" />
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="f0093b64c4fe9eaf3e2df47fa47cea59" Selector="&lt;webctrl parentid='mi_Beneficiaries' tag='A' /&gt;" WaitForReady="COMPLETE" />
              </ui:Click.Target>
            </ui:Click>
            <ui:UiElementExists Exists="{x:Null}" DisplayName="Element Exists 'SPAN  ewPageCaption'" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
              <ui:UiElementExists.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="2858b00503f64270e1f43a16df64c929" Selector="&lt;webctrl id='ewPageCaption' tag='SPAN' /&gt;" TimeoutMS="60000" WaitForReady="INTERACTIVE" />
              </ui:UiElementExists.Target>
            </ui:UiElementExists>
            <ui:ExtractData NextLinkSelector="{x:Null}" ContinueOnError="True" DataTable="[dtBeneficiary]" DelayBetweenPagesMS="300" DisplayName="Extract Structured Data 'TABLE  tbl_Beneficiarie...'" ExtractMetadata="&lt;extract-table get_columns_name='1' get_empty_columns='1' /&gt;" sap2010:WorkflowViewState.IdRef="ExtractData_1" MaxNumberOfResults="100">
              <ui:ExtractData.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="6a5339366757de3a589ff4a4d675d626" Selector="&lt;webctrl tag='TABLE' /&gt;" WaitForReady="COMPLETE" />
              </ui:ExtractData.Target>
            </ui:ExtractData>
            <ui:InvokeCode ContinueOnError="{x:Null}" Code="&#xA;If dtBeneficiary.Select(String.Format(&quot;ID = '{0}'&quot;,BeneficiaryID)).Any&#xA; outrow = dtBeneficiary.Select(String.Format(&quot;ID = '{0}'&quot;,BeneficiaryID)).First&#xA; idx= dtBeneficiary.Rows.IndexOf(outrow)+1&#xA; FirstName = Convert.ToString(outrow(&quot;Receivers First Name&quot;))&#xA; LastName = Convert.ToString(outrow(&quot;Receivers Last Name&quot;)).Substring(0,1)&#xA; BankName = Convert.ToString(outrow(&quot;Receiver's Bank Name&quot;))&#xA; Console.WriteLine( &quot;idx = &quot; + idx.ToString)&#xA; Else&#xA;  Console.WriteLine( &quot;Row not found&quot; )&#xA;End If" DisplayName="Invoke Code" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
              <ui:InvokeCode.Arguments>
                <InArgument x:TypeArguments="sd:DataTable" x:Key="dtBeneficiary">[dtBeneficiary]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="BeneficiaryID">[BeneficiaryID]</InArgument>
                <OutArgument x:TypeArguments="x:Int32" x:Key="idx">[idx]</OutArgument>
                <OutArgument x:TypeArguments="sd:DataRow" x:Key="outrow">[dtRow]</OutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="FirstName">[FirstName]</OutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="LastName">[LastName]</OutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="BankName">[BankName]</OutArgument>
              </ui:InvokeCode.Arguments>
            </ui:InvokeCode>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[Selector]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[string.Format( "&lt;webctrl aaname='Verify' parentid='r{0}_Beneficiaries' tag='A' /&gt;", idx)]</InArgument>
              </Assign.Value>
            </Assign>
            <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[Selector]" />
            <ui:Click DelayBefore="{x:Null}" ClickType="CLICK_SINGLE" DelayMS="3000" sap2010:WorkflowViewState.IdRef="Click_3" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="[Selector]" WaitForReady="INTERACTIVE" />
              </ui:Click.Target>
            </ui:Click>
            <Assign>
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[Selector]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[string.Format( "&lt;webctrl parentid='el{0}_Beneficiaries_Requestor_Email' tag='SPAN' /&gt;", idx)]</InArgument>
              </Assign.Value>
              <sap2010:WorkflowViewState.IdRef>Assign_8</sap2010:WorkflowViewState.IdRef>
            </Assign>
            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Status">
              <ui:GetValue.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="[Selector]" WaitForReady="INTERACTIVE" />
              </ui:GetValue.Target>
              <ui:GetValue.Value>
                <OutArgument x:TypeArguments="x:String">[Email]</OutArgument>
              </ui:GetValue.Value>
              <sap2010:WorkflowViewState.IdRef>GetValue_4</sap2010:WorkflowViewState.IdRef>
            </ui:GetValue>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[Selector]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[string.Format( "&lt;webctrl parentid='el{0}_Beneficiaries_Beneficiary_Status' tag='SPAN' /&gt;", idx)]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Status" sap2010:WorkflowViewState.IdRef="GetValue_1">
              <ui:GetValue.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="[Selector]" WaitForReady="INTERACTIVE" />
              </ui:GetValue.Target>
              <ui:GetValue.Value>
                <OutArgument x:TypeArguments="x:String">[Status]</OutArgument>
              </ui:GetValue.Value>
            </ui:GetValue>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[StatusCount]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">0</InArgument>
              </Assign.Value>
            </Assign>
            <While DisplayName="While - Pending" sap2010:WorkflowViewState.IdRef="While_1" Condition="[Status.Trim.Equals(&quot;Pending&quot;) and StatusCount &lt; 1]">
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_6">
                <Delay Duration="00:00:05" sap2010:WorkflowViewState.IdRef="Delay_1" />
                <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="[&quot;trying =  &quot; + StatusCount.ToString]" />
                <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text" sap2010:WorkflowViewState.IdRef="GetValue_2">
                  <ui:GetValue.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="[Selector]" WaitForReady="INTERACTIVE" />
                  </ui:GetValue.Target>
                  <ui:GetValue.Value>
                    <OutArgument x:TypeArguments="x:String">[Status]</OutArgument>
                  </ui:GetValue.Value>
                </ui:GetValue>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_4">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[StatusCount]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[StatusCount+1]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </While>
            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text" sap2010:WorkflowViewState.IdRef="GetValue_3">
              <ui:GetValue.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="[Selector]" WaitForReady="INTERACTIVE" />
              </ui:GetValue.Target>
              <ui:GetValue.Value>
                <OutArgument x:TypeArguments="x:String">[Status]</OutArgument>
              </ui:GetValue.Value>
            </ui:GetValue>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_6">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[AdminEmailID]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Config("ZingerAdminEmail").ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[Status.Trim.Equals(&quot;Verified&quot;)]" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="Body" />
                  </Sequence.Variables>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_5">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[Body]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[string.Format(Config("VerifiedBody").ToString,FirstName, LastName)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SendEmail workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="SendEmail.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config">[Config]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="CC">[AdminEmailID]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="Subject">[Config("VerifySubject").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="Body">[Body]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ToID">[Email]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_8">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="Body" />
                  </Sequence.Variables>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[Body]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[string.Format(Config("InvalidBody").ToString,FirstName,LastName)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SendEmail workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="SendEmail.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config">[Config]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="CC">[AdminEmailID]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="Subject">[Config("InValidSubject").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="Body">[Body]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ToID">[Email]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </If.Else>
            </If>
            <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="Complete Beneficiary" />
          </Sequence>
        </ActivityAction>
      </ui:BrowserScope.Body>
    </ui:BrowserScope>
    <sads:DebugSymbol.Symbol>dzxGOlxQcm9qZWN0XEFudGhvbmV5XFppbmdlclBheVxBZG1pblxBcHByb3ZlZEJlbmVmaWNpYXJ5LnhhbWxjAVoBXAECTwOkAg4CAQFVOFVVAgECWAVYkwEDAZQBWQWiAhcCAQNYXFiQAQMBlQFZnAJZxgIDAZMBXwufAhYCAQRnDW4YAwGOAW8NcyIDAYsBdA14HgMBgwF5DYMBHQIBdIQBDYsBFgIBb4wBDYwBcwIBbI0BDZsBGAIBaJwBDaQBFgIBY6UBDa0BGwIBXq4BDbUBFgIBWbYBDb0BGwIBVL4BDcUBFgIBUMYBDdsBFQIBPNwBDeMBGwIBN+QBDesBFgIBMuwBDZ0CEgIBB54CDZ4CfQIBBWygAWzXAQMBkgFnT2dVAwGRAWk6aT4DAZABaSxpMQMBjwFxiwFxvAEDAY0BcccBcc4BAwGMAXThAnTmAgMBigF2oAF2vwEDAYkBdIABdIUBAwGIAXRJdE8DAYcBdFp0awMBhQF02QF0nQIDAYQBgAFKgAFUAwGBAXtSe2ECAX98TnxdAgF9fkp+UQIBe31EfUkCAXmBAUqBAVQCAXd/S39WAgF1iQE4iQGYAQIBcoYBOYYBQwIBcIwBZIwBcAIBbZkBZ5kBcwIBao0BT40BVQIBaaEBOKEBnAECAWaeATmeAUMCAWSqATmqAUACAV+nAWenAXMCAWGzATizAZ8BAgFcsAE5sAFDAgFauwE5uwFBAgFVuAFnuAFzAgFXwwE3wwE4AgFTwAE4wAFFAgFRxwEP2gEaAgFAxgFmxgGoAQIBPeEBOeEBQQIBON4BZ94BcwIBOukBOOkBXQIBNeYBOeYBRwIBM+wBG+wBRwIBCO4BEYMCHAIBHoYCEZsCHAIBCp4CZJ4CegIBBsgBEcgBWAIBTskBEckBnAECAUvKARHRAR8CAUbSARHZARoCAUHyARP5ARwCASv6AROCAisCAR+KAhORAhwCAReSAhOaAisCAQvIASHIASsCAU/JAWjJAZkBAgFMzwE9zwFFAgFHzAFrzAF3AgFJ1wE71wFKAgFE1AE81AFJAgFC9wE+9wGCAQIBLvQBP/QBRQIBLP0BSf0BVwIBKf8BS/8BUQIBJ/4BTv4BcAIBJYACS4ACUgIBI/wBZ/wBbwIBIfoBxAH6AdQBAgEgjwI+jwKAAQIBGowCP4wCRQIBGJUCSZUCVwIBFZcCS5cCUQIBE5YCTpYCcQIBEZgCS5gCUgIBD5QCZ5QCbwIBDZICxAGSAtQBAgEM</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="WriteLine_1" sap:VirtualizedContainerService.HintSize="735.2,62.4" />
      <sap2010:ViewStateData Id="Click_1" sap:VirtualizedContainerService.HintSize="698.4,107.2" />
      <sap2010:ViewStateData Id="UiElementExists_1" sap:VirtualizedContainerService.HintSize="698.4,107.2" />
      <sap2010:ViewStateData Id="ExtractData_1" sap:VirtualizedContainerService.HintSize="698.4,107.2" />
      <sap2010:ViewStateData Id="InvokeCode_1" sap:VirtualizedContainerService.HintSize="698.4,164.8" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="698.4,60" />
      <sap2010:ViewStateData Id="WriteLine_2" sap:VirtualizedContainerService.HintSize="698.4,62.4" />
      <sap2010:ViewStateData Id="Click_3" sap:VirtualizedContainerService.HintSize="698.4,68.8" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="698.4,60" />
      <sap2010:ViewStateData Id="GetValue_4" sap:VirtualizedContainerService.HintSize="698.4,68.8" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="698.4,60" />
      <sap2010:ViewStateData Id="GetValue_1" sap:VirtualizedContainerService.HintSize="698.4,68.8" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="698.4,60" />
      <sap2010:ViewStateData Id="Delay_1" sap:VirtualizedContainerService.HintSize="314.4,22.4" />
      <sap2010:ViewStateData Id="WriteLine_3" sap:VirtualizedContainerService.HintSize="314.4,62.4" />
      <sap2010:ViewStateData Id="GetValue_2" sap:VirtualizedContainerService.HintSize="314.4,68.8" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="797.6,3485.6" />
      <sap2010:ViewStateData Id="While_1" sap:VirtualizedContainerService.HintSize="698.4,617.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetValue_3" sap:VirtualizedContainerService.HintSize="698.4,68.8" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="698.4,60" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="314.4,88" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="336.8,312.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_2" sap:VirtualizedContainerService.HintSize="314.4,88" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="336.8,312.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="698.4,462.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_4" sap:VirtualizedContainerService.HintSize="698.4,62.4" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="720.8,3031.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BrowserScope_2" sap:VirtualizedContainerService.HintSize="735.2,3178.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="757.6,3405.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>