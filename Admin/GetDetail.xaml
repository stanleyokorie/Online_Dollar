<Activity mc:Ignorable="sap sap2010 sads" x:Class="ReadName"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:snm="clr-namespace:System.Net.Mail;assembly=System"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="objMail" Type="InArgument(snm:MailMessage)" />
    <x:Property Name="EmailId" Type="OutArgument(x:String)" />
    <x:Property Name="DbApprovar" Type="InArgument(sd:DataTable)" />
    <x:Property Name="Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>ReadName_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Web.Mail</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.Web</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Get Detail" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="State" />
      <Variable x:TypeArguments="x:String" Name="ApprovarEmail" />
      <Variable x:TypeArguments="ui:GenericValue" Name="emailBody" />
    </Sequence.Variables>
    <ui:WriteCsvFile Encoding="{x:Null}" AddHeaders="True" DataTable="[DbApprovar]" Delimitator="Comma" DisplayName="Write CSV" FilePath="DbApprovar.csv" sap2010:WorkflowViewState.IdRef="WriteCsvFile_1" />
    <ui:CommentOut DisplayName="Comment Out" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="ui:GenericValue">[emailBody]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="ui:GenericValue">[emais(0).Body]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
    <ui:CommentOut DisplayName="Comment Out" sap2010:WorkflowViewState.IdRef="CommentOut_2">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim arrstr As String() = strBody.Split(New String(){Environment.NewLine}, StringSplitOptions.None)&#xD;&#xA; strBody = String.Empty&#xD;&#xA;Dim isskip As Boolean  = False&#xD;&#xA; For Each str As String In arrstr&#xD;&#xA;	 If(isskip)&#xD;&#xA;	 	isskip = False&#xD;&#xA;	 	Continue For&#xD;&#xA;	 End If&#xD;&#xA;	 &#xD;&#xA;	If(str.Trim.Contains(&quot;Password&quot;))&#xD;&#xA;		isskip = True&#xD;&#xA;	Else&#xD;&#xA;		strBody = strBody + str + Environment.NewLine&#xD;&#xA;	End If&#xD;&#xA;Next&#xD;&#xA;	&#xD;&#xA;	" DisplayName="Invoke Code" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
            <ui:InvokeCode.Arguments>
              <InOutArgument x:TypeArguments="x:String" x:Key="strBody">[emailBody]</InOutArgument>
            </ui:InvokeCode.Arguments>
          </ui:InvokeCode>
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="Try&#xD;&#xA;emailid = Body.Split(New String(){ &quot;Email (UserID):&quot;}, stringsplitoptions.RemoveEmptyEntries)(1).Split(New String(){environment.NewLine}, StringSplitOptions.RemoveEmptyEntries)(0)&#xD;&#xA;State = Body.Split(New String(){ &quot;State:&quot;}, stringsplitoptions.RemoveEmptyEntries)(1).Split(New String(){environment.NewLine}, StringSplitOptions.RemoveEmptyEntries)(0)&#xD;&#xA;&#xD;&#xA;console.WriteLine(&quot;emailid ==&quot; + emailid)&#xD;&#xA;console.WriteLine(&quot;State ==&quot; + State)&#xD;&#xA; &#xD;&#xA;'If DBApprovar.Select(String.Format( &quot;StateName = '{0}'&quot;, State)).Any&#xD;&#xA;' ApprovarEmail = DBApprovar.Select(String.Format( &quot;StateName = '{0}'&quot;, State)).First()(&quot;Approver Email&quot;).ToString&#xD;&#xA;'End If&#xD;&#xA;Dim arrstr As String() = Body.Split(New String(){Environment.NewLine}, StringSplitOptions.None)&#xD;&#xA; Body = String.Empty&#xD;&#xA;	Dim isskip As Boolean  = False&#xD;&#xA; For Each str As String In arrstr&#xD;&#xA;	 If(isskip)&#xD;&#xA;	 	isskip = False&#xD;&#xA;	 	Continue For&#xD;&#xA;	 End If&#xD;&#xA;	 &#xD;&#xA;	If(str.Trim.Contains(&quot;Password&quot;))&#xD;&#xA;		isskip = True&#xD;&#xA;	Else&#xD;&#xA;		Body = Body + str + Environment.NewLine&#xD;&#xA;	End If&#xD;&#xA;Next&#xD;&#xA;&#xD;&#xA;ApprovarEmail =&quot;sunil.fet2001@gmail.com&quot;&#xD;&#xA;Catch ex As exception&#xD;&#xA;console.WriteLine(ex.Message)&#xD;&#xA;End Try&#xD;&#xA;" DisplayName="Invoke Code" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
      <ui:InvokeCode.Arguments>
        <InOutArgument x:TypeArguments="x:String" x:Key="Body">[objMail.Body]</InOutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="emailid">[EmailId]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="State">[State]</OutArgument>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="DBApprovar">[DbApprovar]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="ApprovarEmail">[ApprovarEmail]</OutArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SendEmail workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="SendEmail.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config">[Config]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="Subject">[objMail.Subject]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="Body">[objMail.Body]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ToID">[Config("DL").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="CC" />
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <sads:DebugSymbol.Symbol>dzJGOlxQcm9qZWN0XEFudGhvbmV5XFppbmdlclBheVxBZG1pblxHZXREZXRhaWwueGFtbBJQA4MBDgIBAVYFVs4BAgEZVwVkFQIBGGUFbxUCARdwBXgVAgEMeQWBAR0CAQJWRlZUAgEbVooBVpoBAgEadkd2VgIBFXJAck4CARNzQXNKAgERdUd1UwIBD3Q/dEYCAQ19PX1LAgEKfEB8UQIBCH49flQCAQZ7WXthAgEEebYBecYBAgED</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="WriteCsvFile_1" sap:VirtualizedContainerService.HintSize="314.4,88" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="265.6,184.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_1" sap:VirtualizedContainerService.HintSize="314.4,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeCode_2" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="222.4,177.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_2" sap:VirtualizedContainerService.HintSize="314.4,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeCode_1" sap:VirtualizedContainerService.HintSize="314.4,164.8" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="314.4,88" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="336.8,731.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ReadName_1" sap:VirtualizedContainerService.HintSize="376.8,811.2" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>